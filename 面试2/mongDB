### mondDB  

---
### redis mongDB区别
* 类型不同
```
redis k-v 类型
mongDB是文档类型，文档之间可以嵌套，具有一定的关系。
```
* 存取方式不同
```
redis 存在于内存
mongdb数据存在于磁盘，磁盘连续性存储，顺序读取数据比随机读取快
```

* 车辆轨迹使用mongdb存储
```
1. 实时更新，从技术特点不适合
2. 使用mongdb 文档型nosql数据库，从存储方式上优于关系型数据库，基于文档比基于表读取快
```

---
### mongDB mysql对比  

```
SQL术语                  mongDB术语          解释说明
database                database            数据库
table                   collection          数据库表/集合
row                     document            数据记录行/文档
column                  field              数据字段/域
index                   index              索引
table joins                                表连接,MongoDB不支持
primary key             primary key        主键,MongoDB自动将_id字段设置为主键

```
---
### mongDB介绍
```
1. MongoDB 将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。
2. 基础概念，在mongodb中基本的概念是文档、集合、数据库
```
---
### 特点
```
1. MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易
2. Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。
3. MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。
4. Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。
5. Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。
```
---
### 数据库 集合 文档
```
数据库
1.MongoDB的默认数据库为"db"，该数据库存储在data目录中。
2.操作数据库的命令
  "show dbs" ：命令可以显示所有数据的列表。
   use 数据库名：运行"use"命令，可以连接到一个指定的数据库。
3.数据库也通过名字来标识。数据库名可以是满足以下条件的任意UTF-8字符串：不能是空字符串（"")，应全部小写。

集合
1.集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System)中的表格。
2.集合存在于数据库中，集合没有固定的结构，可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。
比如，我们可以将以下不同数据结构的文档插入到集合中：
{"site":"www.baidu.com"}
{"site":"www.google.com","name":"Google"}
{"site":"www.runoob.com","name":"菜鸟教程","num":5}
当第一个文档插入时，集合就会被创建。

文档
1.文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。
2.案例：
文档中的键/值对是有序的。
文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。
MongoDB区分类型和大小写。
MongoDB的文档不能有重复的键。
文档的键是字符串
主键	主键 (MongoDB 提供了 key 为 _id )
```
---
### mongdb数据类型
```
MongoDB 数据类型
下表为MongoDB中常用的几种数据类型。

数据类型	描述
String	字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。
Integer	整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。
Boolean	布尔值。用于存储布尔值（真/假）。
Double	双精度浮点值。用于存储浮点值。
Min/Max keys	将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。
Array	用于将数组或列表或多个值存储为一个键。
Timestamp	时间戳。记录文档修改或添加的具体时间。
Object	用于内嵌文档。
Null	用于创建空值。
Symbol	符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。
Date	日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。
Object ID	对象 ID。用于创建文档的 ID。
Binary Data	二进制数据。用于存储二进制数据。
Code	代码类型。用于在文档中存储 JavaScript 代码。
Regular expression	正则表达式类型。用于存储正则表达式。
```
---
### ObjectId 
```
MongoDB 中存储的文档必须有一个 _id 键。这个键的值可以是任何类型的，默认是个 ObjectId 对象
由于 ObjectId 中保存了创建的时间戳，所以你不需要为你的文档保存时间戳字段，你可以通过 getTimestamp 函数来获取文档的创建时间:

> var newObject = ObjectId()
> newObject.getTimestamp()
ISODate("2017-11-25T07:21:10Z")
ObjectId 转为字符串

> newObject.str
5a1919e63df83ce79df8b38f
```
---
### 数据库命令
```
use DATABASE_NAME
如果数据库不存在，则创建数据库，否则切换到指定数据库。

查看数据库：show dbs


db.dropDatabase()
删除当前数据库，默认为 test，你可以使用 db 命令查看当前数据库名。
```
---
### 集合命令
```
MongoDB 中使用 createCollection() 方法来创建集合。
语法格式：
db.createCollection(name, options)
参数说明：
name: 要创建的集合名称
options: 可选参数, 指定有关内存大小及索引的选项

在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。
> db.mycol2.insert({"name" : "菜鸟教程"})
> show collections
mycol2



MongoDB 中使用 drop() 方法来删除集合。
语法格式：
db.collection.drop()
```
---
### 文档
```
插入文档

db.col.insert({title: 'MongoDB 教程', 
    description: 'MongoDB 是一个 Nosql 数据库',
    by: '菜鸟教程',
    url: 'http://www.runoob.com',
    tags: ['mongodb', 'database', 'NoSQL'],
    likes: 100
})
以上实例中 col 是我们的集合名，如果该集合不在该数据库中， MongoDB 会自动创建该集合并插入文档。
```
---
### 排序
```
1.方法sort(),用于对结果集合进行排序
2.语法：db.stu.find().sort({字段：1，字段：-1...})
参数 1 为升序
参数 2 为降序
3.案例：
根据性别降序，根据年龄升序
db.stu.find().sort({gender:-1,age:1})
```
---
### 查询
```
1. 范围查询
使用$in ,$nin 判断是否在某个范围
db.stu.find({age:{$in:[18,90]}})

2.正则表达式
使用//或$regex编写正则表达式
db.stu.find({age:/^谎/})
db.stu.find({age:{$regex:'^谎'}})

3.自定义查询
使用$where后面写一个函数，返回满足条件的数据
db.stu.find({$where:function(){return this.age > 30}})
```
---
### 统计个数
```
1.方法count()用于统计结果集中的文档条数
db.stu.find({条件}).count()
db.stu.find({gender:1}).count()

2.统计集合
db.集合名称.count({条件})
db.stu.count({age:{$gt:20},gender:1})
```
---
### 消除去重
```
1.方法distinct()对数据进行去重
db.集合名称.distinct('去重字段'，{条件})
```
---
### 聚合  
* 聚合概念  
    ```
    聚合aggregate
    1.聚合(aggregate)主要用于计算数据,类似sq中的sum), avg()语法
     db.集合名称.aggregate([(管道: (表达式))
    2.管道
    管道在Unix和Linux中.般用于将当前命令的输出结果作为下一个命令的输入
    ```
* 常用管道
    ```
    1.在mongodbl,管道具有同样的作用,文档处理完毕后,通过管道进行下一次处常用管道
    $Sgroup:将集合中的文档分组,可用于统计结果
    $match:过滤数据,只输出符合条件的文档
    $project:修改输入文档的结构,如重命名、增加、删除字段、创建计算结果,Ssort:将输入文档排序后输出
    $limit:限制聚合管道返回的文档数
    $skip:跳过指定数量的文档,并返回余下的文档
    $unwind:将数组类型的字段进行拆分
    ```
* 常用表达式
```
表达式
$sum 处理输入文档并输出语法  $sum:1 同count表示计数
$avg:计算平均值, 
$min:获取最小值, 
$max:获取最大值Spush: 在EEEAE到一个组1。 
$first:根据资源文档的排序获取第一个文档数据。 
$last:根据资源文档的排序获取最后一个文档数据
```














































